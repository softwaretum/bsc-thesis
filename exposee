A Darknet Simulation Model
========

Social networks play an increasingly important role in modern communication. Decentralized peer-to-peer networks can put the control of the communication and its content back to the communicating people. Darknet based social peer-to-peer networks can ensure privacy and can improve the resilience of those networks against attacks and censorship. Darknets are peer-to-peer overlays in which connections are only established upon trust between the involved nodes. Information about the network topology e.g. the peers of one node are kept local and not spread through the network. Due to the local only knowledge of every node, darknets permit no netwide inspection or measuring of its quality. Thus efficient routing of messages is quite difficult.
For improving darknets, or protocols in general, one needs to both identify (performance) problems and be able to compare different implementations and parameter settings. Until now the options where to theoreticaly estimate the performance or to entirely simulate such a network from scratch. There is no simple and comparable way to meassure the quality of routing algorithms of darknets. A tool or framework to easily implement the abstract routing mechanics and capable of simulating networks of a magnitude of 10k nodes is missing. With Omnet++ there is a complex simulation framework with which one can model a wide variety of protocoals and topologies.
I want do develop a basic and easily extenable model of a darknet node with which complexer darknets can be implemented. Together with the capability to run larger simulations, we would be able to gain a much better accurateness of simulations. Tests of changes to the routing algorithms and parameters would be more scalable and easier to understand and debug than fully simulated testbeds.
After implementing these models in OMNeT++, I will simulate some larger networks based on real world social graphs with two basic routing algorithms, probably flooding and random-walk routing. I will analyse and compare some basic metrices of those two, especially the average found path length and the ammount of sent packages to transmit a message to its destination. A lot of simulations and analyses use these metrices to compare results, so its a good start. Beyond that, with OMNeT++ it is possible to meassure many more factors of interest.
First we modeled an abstract node in a darknet with a state diagram and scatched some basic methods every node will implement. Until now I implemented the basic DarknetBaseNode model and tested it with a simple hotpotato-routing darknet. In the next week I will implement the missing parts of the DarknetBaseNode for simulation and the topology generator from graph data. After that I will simulate first some small networks to test the behaviour on a distributed simulation and go on to simulate some real world social graphs.In two to three wees I will write down the results and the documentation of the model and implemented OMNeT++ code what will take about 4 weeks. This will be followed by 2 weeks of revisioning and correcting.



single questions
================

1. The problem (what /exactly/ is the problem tackled in this thesis)

Due to the local only knowledge of every node, darknets permit no netwide inspection or measuring of its quality.


2. Some support for it's relevance (why is it really a problem and why
   will solving it change the world and make it a better place? wink )

Social networks play an increasingly important role in modern communication. Decentralized peer-to-peer networks can put the control of the communication and its content back to the communicating people. Darknet based social peer-to-peer networks can ensure privacy and can improve the resilience of those networks against attacks and censorship.


3. A rough overview over background (explain the basics) and related
   work (what do others solve and what is missing) (it can help to
   already roughly sketch the requirements for the system, as well as
   metrics that can be used to show if a solution is good or bad =>
   especially the metrics that will show that your solution is better
   than the state of the art)

Darknets are peer-to-peer overlays in which connections are only established upon trust between the involved nodes.Information about the network topology e.g. the peers of one node are kept local and not spread through the network. Thus efficient routing of messages is quite difficult. For improving darknets, or protocols in general, one needs to both identify (performance) problems and be able to compare different implementations and parameter settings. Until now the options where to theoreticaly estimate the performance or to entirely simulate such a network from scratch. There is no simple and comparable way to meassure the quality of routing algorithms of darknets.

4. A first sketch of an idea how the problem could be solved in the
   thesis -- here the proposal will indicate which ideas the student
   wants to follow and how they will be implemented

A tool or framework to easily implement the abstract routing mechanics and capable of simulating networks of a magnitude of 10k nodes is missing. With Omnet++ there is a complex simulation framework with which one can model a wide variety of protocoals and topologies. I want do develop a basic and easily extenable model of a darknet node with which complexer darknets can be implemented.


5. A very short rationale why this solution will solve the problem (and
   how)

Together with the capability to run larger simulations, we would be able to gain a much better accurateness of simulations. Tests of changes to the routing algorithms and parameters would be more scalable and easier to understand and debug than fully simulated testbeds.


6. An indication how the solution will be evaluated (at best: together
   with the expected outcome) -- here it will indicate how the student
   will show the superiority (or characteristics) of the solution, will
   most probably contain two of (mathematical analysis &
   proofs|simulation|prototypical implementation and measurement
   study). Keep in mind that you will have to compare your solution to
   a "baseline", iow. the best existing solution, and that you will
   somehow need to show this in your thesis (evaluating /both/!) --
   unless you are the first one solve a new problem and there is no
   prior art (in which case it is still a sign of quality to come up
   with a baseline like, e.g., an upper bound (the optimal solution),
   or a trivial solution).

After implementing these models in OMNeT++, I will simulate some larger networks based on real world social graphs with two basic routing algorithms, probably flooding and random-walk routing. I will analyse and compare some basic metrices of those two, especially the average found path length and the ammount of sent packages to transmit a message to its destination. A lot of simulations and analyses use these metrices to compare results, so its a good start. Beyond that, with OMNeT++ it is possible to meassure many more factors of interest.

7. An initial time plan: what are the major steps (and milestones) and
   roughly during which time will they be dealt with. Should contain
   "literature review", "initial design phase", "implementation",
   "implementing the evaluation", "evaluation", "writing", and "final
   revision and correction". Allow at least 2 weeks for the revision
   and corrections and at least 4 weeks for the "writing" (but make no
   mistake: state writing early, you will need *at least* the four
   weeks to make a story out of you text snippets, to rearrange content
   avoiding redundancy and streamlining the logic, etc.
   
First we modeled an abstract node in a darknet with a state diagram and scatched some basic methods every node will implement. Until now I implemented the basic DarknetBaseNode model and tested it with a simple hotpotato-routing darknet. In the next week I will implement the missing parts of the DarknetBaseNode for simulation and the topology generator from graph data. After that I will simulate first some small networks to test the behaviour on a distributed simulation and go on to simulate some real world social graphs.In two to three wees I will write down the results and the documentation of the model and implemented OMNeT++ code what will take about 4 weeks. This will be followed by 2 weeks of revisioning and correcting.

